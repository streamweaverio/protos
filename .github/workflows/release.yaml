name: Release

on:
  push:
    tags:
      - '*'

run-name: Release ${{ github.ref }}

env:
  GO_PACKAGE: github.com/streamweaverio/go-protos
  NODEJS_PACKAGE: github.com/streamweaverio/node-protos
  OUTPUT_PATH: ./outputs/protos
  SOURCE_REPO: streamweaverio/protos

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      tag: ${{ steps.tag.outputs.value }}
      short_sha: ${{ steps.short_sha.outputs.value }}
      sha: ${{ steps.sha.outputs.value }}
      date: ${{ steps.date.outputs.value }}
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SOURCE_REPO }}
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          fetch-depth: 0  # Fetch all history for better release notes
          
      - name: Tag
        id: tag
        run: |
          value=$(echo ${{ github.ref }} | cut -d'/' -f 3)
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Short Sha
        id: short_sha
        run: |
          value=$(git rev-parse --short HEAD)
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Sha
        id: sha
        run: |
          value=$(git rev-parse HEAD)
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Date
        id: date
        run: |
          value=$(date +'%Y%m%d')
          echo "value=$value" >> $GITHUB_OUTPUT

  generate-code:
    needs: bootstrap
    strategy:
      matrix:
        language: [go, nodejs]
        include:
          - language: go
            package: ${{ env.GO_PACKAGE }}
            setup: |
              uses: actions/setup-go@v4
              with:
                go-version: '1.23'
            tools: |
              go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
              go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
              echo "${HOME}/go/bin" >> $GITHUB_PATH
            generate: |
              make gen_go
              make package_go
            repo: streamweaverio/go-protos
          - language: nodejs
            package: ${{ env.NODEJS_PACKAGE }}
            setup: |
              uses: actions/setup-node@v4
              with:
                node-version: '18'
                cache: 'npm'
            tools: |
              npm ci
            generate: |
              make gen_node_ts
              make package_node
            repo: streamweaverio/node-protos
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          path: source

      - name: Setup ${{ matrix.language }}
        uses: ${{ matrix.setup }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '25.1'  # Specify version for consistency
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install tools
        working-directory: source
        run: ${{ matrix.tools }}

      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo }}
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          path: destination

      - name: Generate Code
        working-directory: source
        run: ${{ matrix.generate }}

      - name: Commit Changes
        id: commit
        env:
          GIT_SHORT_SHA: ${{ needs.bootstrap.outputs.short_sha }}
          COMMIT_SHA: ${{ needs.bootstrap.outputs.sha }}
          VERSION: ${{ needs.bootstrap.outputs.tag }}
          DATE: ${{ needs.bootstrap.outputs.date }}
        run: |
          cd destination
          
          git config --global user.name "Streamweaver Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          BRANCH="protos-${DATE}-${GIT_SHORT_SHA}"
          git switch -c $BRANCH
          
          # Copy generated files
          rm -rf *  # Clean destination directory first
          cp -r ../source/${{ env.OUTPUT_PATH }}/* .
          
          # Check for changes
          if [ -z "$(git status --porcelain)" ]; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          git add -A
          git commit -m "Streamweaver proto ${VERSION}: Generated ${{ matrix.language }} code from commit: ${COMMIT_SHA}"
          git push origin $BRANCH
          
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.commit.outputs.no_changes != 'true'
        id: pull_request
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          BRANCH: ${{ steps.commit.outputs.branch }}
          REPO: ${{ matrix.package }}
          VERSION: ${{ needs.bootstrap.outputs.tag }}
        run: |
          PR_BODY="# Automated Proto Generation

          This PR was automatically generated by the Streamweaver Bot.

          ## Details
          - Source Version: ${VERSION}
          - Source Commit: ${{ needs.bootstrap.outputs.sha }}
          - Language: ${{ matrix.language }}

          ## Changes
          $(git -C destination diff --stat main)

          ## Validation
          - [ ] Generated code builds successfully
          - [ ] All tests pass
          - [ ] No breaking changes introduced"

          TITLE="feat(protos): Update generated code for ${VERSION}"
          
          pr_url=$(gh pr create \
            --repo $REPO \
            --base main \
            --head $BRANCH \
            --title "$TITLE" \
            --body "$PR_BODY" \
            --label "automerge" \
            --label "automated-pr")
          
          pr_number=$(echo $pr_url | grep -oP '(?<=pull/)\d+')
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT

      - name: Merge Pull Request
        if: steps.pull_request.outputs.pr_number != null
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          PR_NUMBER: ${{ steps.pull_request.outputs.pr_number }}
          REPO: ${{ matrix.package }}
        run: |
          echo "Waiting for checks to complete..."
          gh pr merge $PR_NUMBER \
            --repo $REPO \
            --squash \
            --admin \
            --delete-branch \
            --body "Auto-merging PR after successful checks"

      - name: Create Release
        if: steps.commit.outputs.no_changes != 'true'
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          tag: ${{ needs.bootstrap.outputs.tag }}
          name: Release ${{ needs.bootstrap.outputs.tag }}
          owner: streamweaverio
          repo: ${{ matrix.repo }}
          body: |
            ## What's Changed
            Auto-generated ${{ matrix.language }} code from proto definitions.

            ### Details
            - Source Version: ${{ needs.bootstrap.outputs.tag }}
            - Source Commit: ${{ needs.bootstrap.outputs.sha }}
            - Generated: ${{ needs.bootstrap.outputs.date }}
          generateReleaseNotes: true
          draft: false
          prerelease: false