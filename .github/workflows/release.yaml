name: Release

on:
  push:
    tags:
      - '*'

run-name: Release ${{ github.ref }}

env:
  GO_PACKAGE: github.com/streamweaverio/go-protos
  NODEJS_PACKAGE: github.com/streamweaverio/node-protos
  OUTPUT_PATH: ./outputs/protos
  SOURCE_REPO: streamweaverio/protos

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      tag: ${{ steps.tag.outputs.value }}
      short_sha: ${{ steps.short_sha.outputs.value }}
      sha: ${{ steps.sha.outputs.value }}
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SOURCE_REPO }}
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          
      - name: Tag
        id: tag
        run: |
          value=$(echo ${{ github.ref }} | cut -d'/' -f 3)
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Short Sha
        id: short_sha
        run: |
          value=$(git rev-parse --short HEAD)
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Sha
        id: sha
        run: |
          value=$(git rev-parse HEAD)
          echo "value=$value" >> $GITHUB_OUTPUT

  go:
    needs: bootstrap
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          path: source

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Install protoc-gen-go
        run: |
          # Install protoc-gen-go and protoc-gen-go-grpc
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

          # Ensure GOPATH/bin is in the PATH
          echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: streamweaverio/go-protos
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          path: destination

      - name: Generate Go Code
        working-directory: source
        run: |
          make gen_go
          make package_go

      - name: Commit Go Code
        id: commit
        env:
          GIT_SHORT_SHA: ${{ needs.bootstrap.outputs.short_sha }}
          COMMIT_SHA: ${{ needs.bootstrap.outputs.sha }}
          VERSION: ${{ needs.bootstrap.outputs.tag }}
        run: |
          # Switch to destination repo
          cd ../destination
          
          # Configure git
          git config --global user.name "Streamweaver Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create new branch
          BRANCH="protos-$(date +'%Y%m%d')-$GIT_SHORT_SHA"
          git switch -c $BRANCH
          
          # Copy generated files from output directory to destination
          cp -r ../source/${{ env.OUTPUT_PATH }}/${{ env.GO_PACKAGE }}/* .
          
          # Check if there are any changes
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit"
            exit 0
          fi

          git add -A
          git commit -m "Streamweaver proto $VERSION: Generated Go code from commit: $COMMIT_SHA"
          git push origin $BRANCH
          
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.commit.outputs.branch != null
        id: pull_request
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          BRANCH: ${{ steps.commit.outputs.branch }}
          TARGET_BRANCH: main
          COMMIT_SHA: ${{ needs.bootstrap.outputs.sha }}
          REPO: ${{ env.GO_PACKAGE }}
          PR_BODY: |
            This PR was automatically generated by the Streamweaver Bot.
            
            Source commit: ${{ needs.bootstrap.outputs.sha }}
            Version: ${{ needs.bootstrap.outputs.tag }}
        run: |
          echo "Creating pull request in ${{ env.GO_PACKAGE }}..."
          TITLE="Streamweaver proto: Generated Go code from ${{ needs.bootstrap.outputs.tag }}"
          pr_url=$(gh pr create -B $TARGET_BRANCH -H $BRANCH --title "$TITLE" --body "$PR_BODY" --label "automerge" --repo $REPO)
          pr_number=$(echo $pr_url | grep -oP '(?<=pull/)\d+')
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT

      - name: Merge Pull Request
        if: steps.pull_request.outputs.pr_number != null
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          PR_NUMBER: ${{ steps.pull_request.outputs.pr_number }}
          REPO: ${{ env.GO_PACKAGE }}
        run: |
          echo "Waiting for PR to be ready..."
          sleep 30  # Adjust the sleep duration if necessary
          echo "Merging PR..."
          gh pr merge $PR_NUMBER -s --admin --body "Auto-merging PR" --repo $REPO

      - name: Tag Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          tag: ${{ needs.bootstrap.outputs.tag }}
          name: ${{ needs.bootstrap.outputs.tag }}
          owner: streamweaverio
          repo: go-protos
          generateReleaseNotes: true
          draft: false
          prerelease: false

  nodejs:
    needs: bootstrap
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          path: source

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Install tools
        run: |
          cd source
          npm install

      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: streamweaverio/node-protos
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          path: destination

      - name: Generate NodeJs Code
        working-directory: source
        run: |
          make gen_node_ts
          make package_node

      - name: Commit Go Code
        id: commit
        env:
          GIT_SHORT_SHA: ${{ needs.bootstrap.outputs.short_sha }}
          COMMIT_SHA: ${{ needs.bootstrap.outputs.sha }}
          VERSION: ${{ needs.bootstrap.outputs.tag }}
        run: |
          cd ../destination
          
          # Configure git
          git config --global user.name "Streamweaver Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create new branch
          BRANCH="protos-$(date +'%Y%m%d')-$GIT_SHORT_SHA"
          git switch -c $BRANCH
          
          # Copy generated files from output directory to destination
          cp -r ../source/${{ env.OUTPUT_PATH }}/* .
          
          # Check if there are any changes
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit"
            exit 0
          fi

          git add -A
          git commit -m "Streamweaver proto $VERSION: Generated Node code from commit: $COMMIT_SHA"
          git push origin $BRANCH
          
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: pull_request
        if: steps.commit.outputs.branch != null
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          BRANCH: ${{ steps.commit.outputs.branch }}
          TARGET_BRANCH: main
          COMMIT_SHA: ${{ needs.bootstrap.outputs.sha }}
          REPO: ${{ env.NODEJS_PACKAGE }}
          PR_BODY: |
            This PR was automatically generated by the Streamweaver Bot.
            
            Source commit: ${{ needs.bootstrap.outputs.sha }}
            Version: ${{ needs.bootstrap.outputs.tag }}
        run: |
          echo "Creating pull request in ${{ env.NODEJS_PACKAGE }}..."
          TITLE="Streamweaver proto: Generated Go code from ${{ needs.bootstrap.outputs.tag }}"
          pr_url=$(gh pr create -B $TARGET_BRANCH -H $BRANCH --title "$TITLE" --body "$PR_BODY" --label "automerge" --repo $REPO)
          pr_number=$(echo $pr_url | grep -oP '(?<=pull/)\d+')
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT

      - name: Merge Pull Request
        if: steps.pull_request.outputs.pr_number != null
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          PR_NUMBER: ${{ steps.pull_request.outputs.pr_number }}
          REPO: ${{ env.NODEJS_PACKAGE }}
        run: |
          echo "Waiting for PR to be ready..."
          sleep 30  # Adjust the sleep duration if necessary
          echo "Merging PR..."
          gh pr merge $PR_NUMBER -s --admin --body "Auto-merging PR" --repo $REPO

      - name: Tag Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.WORKFLOW_GITHUB_PAT }}
          tag: ${{ needs.bootstrap.outputs.tag }}
          name: ${{ needs.bootstrap.outputs.tag }}
          owner: streamweaverio
          repo: node-protos
          generateReleaseNotes: true
          draft: false
          prerelease: false